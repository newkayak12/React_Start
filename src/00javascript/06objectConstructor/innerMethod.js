// 내부 메소드[[Cal]]과 [[Construct]]
/*
	함수 선언문 또는 함수 표현식으로 정의한 함수는 일반적인 함수로서 호출할 수 있는 것은 물론 생성자 함수 (new연산자와 함께 호출해서 객체를 생성)로서 호출할 수 있다.
	함수는 객체이므로 일반 객체와 동일하게 동작할 수 있다. 함수는 일반 객체가 가지고 있는 내부 슬롯과 내부 메소드를 모두 가지고 있다. 
*/

//함수는 객체이다.
function foo(){}

//함수는 객체이므로 프로퍼티를 소유할 수 있다. 
foo.prop = 10;

//함수는 객체이므로 메소드를 소유할 수 있다.
foo.method = function(){
	console.log(this.prop);
}

foo.method(); //10



/*
	함수는 객체이지만 일반 객체와는 다르다. 일반 객체는 호출할 수 없지만 함수는 호출할 수 있다. 

	>>함수는 일반객체가 가지는 내부 슬롯과 내부 메소드는 물론
		함수로서 동작하기 위해 함수 객체만을 위한 [[Environment]], [[FormalParameters]] 등의 내부 슬롯과 [[Call]], {Construct} 같은 내부 메소드를 추가로 갖고 있다.

*/

function func(){};

//일반적인 함수로서 호출 :[[Call]]이 호출된다.
func();

//생성자 함수로서 호출 : [[Construct]]가 호출된다.
new func();